{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","input","width","height","margin","root","display","flexDirection","alignItems","padding","header","textAlign","button","color","App","useState","url","setUrl","useEffect","substr","handleStart","classes","handleDownload","a","window","open","document","getElementById","src","length","handleClear","value","console","log","className","Paper","Typography","variant","FormControl","InputLabel","htmlFor","Input","type","id","onInput","e","target","autoFocus","endAdornment","InputAdornment","position","IconButton","edge","onClick","Button","frameborder","title","allow","allowfullscreen","ReactDOM","render"],"mappings":"mWAKMA,G,MAAYC,YAAW,CACzBC,MAAO,CACHC,MAAO,QACPC,OAAQ,OACRC,OAAQ,YAEZC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZN,MAAO,QACPO,QAAS,OACTL,OAAQ,YAEZM,OAAQ,CACJC,UAAW,UAEfC,OAAQ,CACJR,OAAQ,YACRS,MAAO,UAGA,SAASC,IAAO,IAAD,EACJC,mBAAS,MADL,mBACnBC,EADmB,KACdC,EADc,KAG1BC,qBAAU,WACM,OAARF,GAC0B,sBAAtBA,EAAIG,OAAO,EAAG,KACdC,EAAY,CAAEJ,UAGvB,CAACA,IAEJ,IAAMK,EAAUtB,IAEVuB,EAAc,uCAAG,sBAAAC,EAAA,sDACnBC,OAAOC,KAAK,uCAAyCT,GADlC,2CAAH,qDAIdI,EAAW,uCAAG,6BAAAG,EAAA,sDAASP,EAAT,EAASA,IACzBU,SAASC,eAAe,UAAUC,IAAM,iCAAmCZ,EAAIG,OAAO,GAAIH,EAAIa,QAD9E,2CAAH,sDAIXC,EAAW,uCAAG,sBAAAP,EAAA,6DAChBG,SAASC,eAAe,SAASI,MAAQ,KADzB,SAEVd,EAAO,MAFG,OAGhBe,QAAQC,IAAIjB,GAHI,2CAAH,qDAKjB,OACI,yBAAKkB,UAAU,kBACX,kBAACC,EAAA,EAAD,CAAOD,UAAWb,EAAQhB,MACtB,kBAAC+B,EAAA,EAAD,CAAYC,QAAQ,KAAKxB,MAAM,YAAYqB,UAAWb,EAAQX,QAA9D,oBACA,kBAAC4B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAApB,yCACA,kBAACC,EAAA,EAAD,CACIC,KAAK,OACLC,GAAG,QACHT,UAAWb,EAAQpB,MACnB8B,MAAOf,EACP4B,QAAS,SAACC,GAAD,OAAO5B,EAAO4B,EAAEC,OAAOf,QAChCgB,UAAU,OACVC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACrB,kBAACC,EAAA,EAAD,CAAYC,KAAK,MAAMC,QAASvB,GAC5B,kBAAC,IAAD,WAMpB,kBAACwB,EAAA,EAAD,CAAQD,QAAS/B,EAAgBe,QAAQ,WAAWH,UAAS,mBAAcb,EAAQT,SAAnF,YACA,4BAAQ2C,YAAY,IAAIZ,GAAG,SAASa,MAAM,gBAAgBC,MAAM,2FAA2FC,iBAAe,MCtE1LC,IAASC,OACP,kBAAC,EAAD,MAASlC,SAASC,eAAe,W","file":"static/js/main.61c15ef1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Typography, Button, Paper, makeStyles, InputAdornment, Input, InputLabel, IconButton, OutlinedInput, FormControl } from \"@material-ui/core\"\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport \"./App.css\"\r\n\r\nconst useStyles = makeStyles({\r\n    input: {\r\n        width: \"20rem\",\r\n        height: \"3rem\",\r\n        margin: \"0px auto\"\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        width: \"30rem\",\r\n        padding: \"2rem\",\r\n        margin: \"1px auto\"\r\n    },\r\n    header: {\r\n        textAlign: \"center\"\r\n    },\r\n    button: {\r\n        margin: \"1rem auto\",\r\n        color: \"red\"\r\n    }\r\n});\r\nexport default function App() {\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (url !== null) {\r\n            if (url.substr(0, 17) === \"https://youtu.be/\") {\r\n                handleStart({ url })\r\n            }\r\n        }\r\n    }, [url]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleDownload = async () => {\r\n        window.open(`http://localhost:5000/download/?url=` + url)\r\n    };\r\n\r\n    const handleStart = async ({ url }) => {\r\n        document.getElementById(\"iframe\").src = \"https://www.youtube.com/embed/\" + url.substr(16, url.length)\r\n    };\r\n\r\n    const handleClear = async () => {\r\n        document.getElementById(\"label\").value = null;\r\n        await setUrl(null)\r\n        console.log(url)\r\n    };\r\n    return (\r\n        <div className=\"main-container\">\r\n            <Paper className={classes.root}>\r\n                <Typography variant=\"h3\" color=\"secondary\" className={classes.header}>video downloader</Typography>\r\n                <FormControl >\r\n                    <InputLabel htmlFor=\"label\">Fill youtube video url to download it</InputLabel>\r\n                    <Input\r\n                        type='text'\r\n                        id=\"label\"\r\n                        className={classes.input}\r\n                        value={url}\r\n                        onInput={(e) => setUrl(e.target.value)}\r\n                        autoFocus=\"true\"\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton edge=\"end\" onClick={handleClear} >\r\n                                    <ClearIcon />\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                </FormControl>\r\n                <Button onClick={handleDownload} variant=\"outlined\" className={`download ${classes.button}`}>Download</Button>\r\n                <iframe frameborder=\"0\" id=\"iframe\" title=\"youtube video\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}